user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    gzip  on;
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;
    
    underscores_in_headers on;
 
    server{
        listen 80;
        keepalive_timeout   70;

        # All HTTP traffic will be redirected to to the auth server
        location / {
            auth_request                            /oauth2/auth;
            error_page 401 = /login;
            proxy_pass                              http://python_server:4200;
            proxy_buffer_size                       8k;
            error_page 401 =                        /oauth2/sign_in;
            auth_request_set                        $user   $upstream_http_x_auth_request_user;
            auth_request_set                        $email  $upstream_http_x_auth_request_email;
            proxy_set_header                        X-User  $user;
            proxy_set_header                        X-Email $email;
            proxy_set_header                        X-Forwarded-Host $http_host;
            proxy_set_header                        X-Real-IP $remote_addr;
            proxy_set_header                        X-Forwarded-Proto $scheme;
            proxy_set_header X-Auth-Request-Redirect $request_uri;
            auth_request_set                        $auth_cookie $upstream_http_set_cookie;
        }

        # This is where the auth_request points, all messages needing auth go to the auth server
        # The auth server returns a 200 if the user is authenticated, otherwise a 401
        location = /oauth2/auth {
            proxy_pass                              http://splash_auth:8000/oauth2/auth;
            proxy_buffer_size                       8k;
            proxy_set_header                        Host             $host;
            proxy_set_header                        X-Real-IP        $remote_addr;
            proxy_set_header                        X-Scheme         $scheme;
            proxy_set_header                        Content-Length   "";
            proxy_set_header X-Auth-Request-Redirect $request_uri;
            proxy_pass_request_body                 off;
        }


        # The login page is unprotected
        location /login {
            proxy_set_header Host                       $host;
            proxy_set_header X-Real-IP                  $remote_addr;
            proxy_set_header X-Scheme                   $scheme;
            proxy_set_header X-Auth-Request-Redirect    $request_uri;
            proxy_buffer_size                           8k;
            proxy_pass http://splash_auth:8000/login;
        }

 
        # For OIDC, the browser is redirected to the auth server to exchange a code
        location = /oidc/auth/code {
            proxy_pass                              http://splash_auth:8000/oidc/auth/code;
            proxy_buffer_size                       8k;
            proxy_set_header                        Host             $host;
            proxy_set_header                        X-Real-IP        $remote_addr;
            proxy_set_header                        X-Scheme         $scheme;
            proxy_set_header                        Content-Length   "";
            proxy_set_header X-Auth-Request-Redirect $request_uri;
            proxy_pass_request_body                 off;
        }
    
    }
}
